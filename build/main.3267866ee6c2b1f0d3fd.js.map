{"version":3,"sources":["webpack:///./services/allInfoApi.js","webpack:///./js/render.js","webpack:///./templates/templateAllinfo.js","webpack:///./templates/templateDetailedInfo.js","webpack:///./services/detailedInfoApi.js","webpack:///./js/refs.js","webpack:///./templates/templateError.js","webpack:///./js/swapi.js"],"names":["planetObj","query","fetchPlanets","requestParams","this","fetch","then","response","json","string","filmsObj","fetchFilms","peopleObj","fetchPeople","speciesObj","fetchSpecies","starshipsObj","fetchStarships","vehiclesObj","fetchVehicles","renderAllInfo","article","items","template","markup","map","item","index","exec","url","join","innerHTML","renderDetailedInfo","renderError","allPlanets","name","allFilms","title","allNames","allSpecies","allStarships","allVehicles","planetInfo","population","climate","diameter","terrain","filmsInfo","opening_crawl","director","release_date","episode_id","peopleInfo","birth_year","eye_color","gender","hair_color","height","mass","speciesInfo","eye_colors","designation","hair_colors","average_height","language","starshipsInfo","cargo_capacity","cost_in_credits","crew","length","model","manufacturer","vehiclesInfo","id","headers","Accept","refs","planetInput","document","querySelector","planetList","planetInfoBlock","filmsInput","filmsList","filmsInfoBlock","peopleInput","peopleList","peopleInfoBlock","speciesInput","speciesList","speciesInfoBlock","starshipsInput","starshipsList","starshipsInfoBlock","vehiclesInput","vehiclesList","vehiclesInfoBlock","errorInfo","swapiApi","data","results","renderInfo","errorNoteficationTemplate","templateAllInfo","catch","err","console","log","addEventListener","debounce","target","searchQuery","value","nodeName","fetchDetailedInfo","templateDetailedInfo"],"mappings":"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","file":"main.3267866ee6c2b1f0d3fd.js","sourcesContent":["const basePlanetUrl = `https://swapi.dev/api/planets/?search=`;\nconst baseFilmsUrl = `https://swapi.dev/api/films/?search=`;\nconst basePeopleUrl = `https://swapi.dev/api/people/?search=`;\nconst baseSpeciesUrl = `https://swapi.dev/api/species/?search=`;\nconst baseStarshipsUrl = `https://swapi.dev/api/starships/?search=`;\nconst baseVehiclesUrl = `https://swapi.dev/api/vehicles/?search=`;\n\nconst planetObj = {\n  query: '',\n  fetchPlanets() {\n    const requestParams = `${this.query}`;\n\n    return fetch(basePlanetUrl + requestParams).then(response => {\n      return response.json();\n    });\n  },\n  get searchQuery() {\n    return this.query;\n  },\n  set searchQuery(string) {\n    this.query = string;\n  },\n};\n\nconst filmsObj = {\n  query: '',\n  fetchFilms() {\n    const requestParams = `${this.query}`;\n\n    return fetch(baseFilmsUrl + requestParams).then(response => {\n      return response.json();\n    });\n  },\n  get searchQuery() {\n    return this.query;\n  },\n  set searchQuery(string) {\n    this.query = string;\n  },\n};\n\nconst peopleObj = {\n  query: '',\n  fetchPeople() {\n    const requestParams = `${this.query}`;\n\n    return fetch(basePeopleUrl + requestParams).then(response => {\n      return response.json();\n    });\n  },\n  get searchQuery() {\n    return this.query;\n  },\n  set searchQuery(string) {\n    this.query = string;\n  },\n};\n\nconst speciesObj = {\n  query: '',\n  fetchSpecies() {\n    const requestParams = `${this.query}`;\n\n    return fetch(baseSpeciesUrl + requestParams).then(response => {\n      return response.json();\n    });\n  },\n  get searchQuery() {\n    return this.query;\n  },\n  set searchQuery(string) {\n    this.query = string;\n  },\n};\n\nconst starshipsObj = {\n  query: '',\n  fetchStarships() {\n    const requestParams = `${this.query}`;\n\n    return fetch(baseStarshipsUrl + requestParams).then(response => {\n      return response.json();\n    });\n  },\n  get searchQuery() {\n    return this.query;\n  },\n  set searchQuery(string) {\n    this.query = string;\n  },\n};\n\nconst vehiclesObj = {\n  query: '',\n  fetchVehicles() {\n    const requestParams = `${this.query}`;\n\n    return fetch(baseVehiclesUrl + requestParams).then(response => {\n      return response.json();\n    });\n  },\n  get searchQuery() {\n    return this.query;\n  },\n  set searchQuery(string) {\n    this.query = string;\n  },\n};\n\nexport {\n  planetObj,\n  filmsObj,\n  peopleObj,\n  speciesObj,\n  starshipsObj,\n  vehiclesObj,\n};\n","function renderAllInfo(article, items, template) {\n  const markup = items\n    .map(item => {\n      const index = /\\d+/.exec(item.url);\n      return template(item, index[0]);\n    })\n    .join('');\n\n  article.innerHTML = markup;\n}\n\nfunction renderDetailedInfo(article, item, template) {\n  const markup = template(item);\n  article.innerHTML = markup;\n}\n\nfunction renderError(article, template) {\n  const markup = template();\n  article.innerHTML = markup;\n}\n\nexport { renderAllInfo, renderDetailedInfo, renderError };\n","function allPlanets(item, index) {\n  return `<li><p>${item.name}</p><button id=${index}>Show more</button></li>`;\n}\n\nfunction allFilms(item, index) {\n  return `<li><p>${item.title}</p><button id=${index}>Show more</button></li>`;\n}\n\nfunction allNames(item, index) {\n  return `<li><p>${item.name}</p><button id=${index}>Show more</button></li>`;\n}\n\nfunction allSpecies(item, index) {\n  return `<li><p>${item.name}</p><button id=${index}>Show more</button></li>`;\n}\n\nfunction allStarships(item, index) {\n  return `<li><p>${item.name}</p><button id=${index}>Show more</button></li>`;\n}\n\nfunction allVehicles(item, index) {\n  return `<li><p>${item.name}</p><button id=${index}>Show more</button></li>`;\n}\n\nexport {\n  allPlanets,\n  allFilms,\n  allNames,\n  allSpecies,\n  allStarships,\n  allVehicles,\n};\n","function planetInfo(item) {\n  return `<div><h4>${item.name}</h4><p>population: ${item.population}</p><p>climate: ${item.climate}</p><p>diameter: ${item.diameter}</p><p>terrain: ${item.terrain}</p></div>`;\n}\n\nfunction filmsInfo(item) {\n  return `<div><h4>${item.title}</h4>description: <p>${item.opening_crawl}</p><p>director: ${item.director}</p><p>release date: ${item.release_date}</p><p>episode: ${item.episode_id}</p></div>`;\n}\n\nfunction peopleInfo(item) {\n  return `<div><h4>${item.name}</h4><p>birth year: ${item.birth_year}</p><p>eye color: ${item.eye_color}</p><p>gender: ${item.gender}</p><p>hair color: ${item.hair_color}</p><p>height: ${item.height}</p><p>mass: ${item.mass}</p></div>`;\n}\n\nfunction speciesInfo(item) {\n  return `<div><h4>${item.name}</h4><p>eye colors: ${item.eye_colors}</p><p>designation: ${item.designation}</p><p>hair colors: ${item.hair_colors}</p><p>average height: ${item.average_height}</p><p>language: ${item.language}</p></div>`;\n}\n\nfunction starshipsInfo(item) {\n  return `<div><h4>${item.name}</h4><p>cargo capacity: ${item.cargo_capacity}</p><p>cost in credits: ${item.cost_in_credits}</p><p>crew: ${item.crew}</p><p>length: ${item.length}</p><p>model: ${item.model}</p><p>manufacturer: ${item.manufacturer}</p></div>`;\n}\n\nfunction vehiclesInfo(item) {\n  return `<div><h4>${item.name}</h4><p>cargo capacity: ${item.cargo_capacity}</p><p>cost in credits: ${item.cost_in_credits}</p><p>crew: ${item.crew}</p><p>length: ${item.length}</p><p>model: ${item.model}</p><p>manufacturer: ${item.manufacturer}</p></div>`;\n}\n\nexport {\n  planetInfo,\n  filmsInfo,\n  peopleInfo,\n  speciesInfo,\n  starshipsInfo,\n  vehiclesInfo,\n};\n","// const baseUrl = 'https://swapi.dev/api/';\n\nexport default {\n  fetchDetailed(id, url) {\n    return fetch('https://swapi.dev/api/' + url + id, {\n      headers: {\n        Accept: 'application/json',\n      },\n    }).then(response => {\n      return response.json();\n    });\n  },\n};\n","const refs = {\n  planetInput: document.querySelector('#planetInput'),\n  planetList: document.querySelector('#swapi-planets'),\n  planetInfoBlock: document.querySelector('.planetDetailedInfo'),\n\n  filmsInput: document.querySelector('#filmsInput'),\n  filmsList: document.querySelector('#swapi-films'),\n  filmsInfoBlock: document.querySelector('.filmsDetailedInfo'),\n\n  peopleInput: document.querySelector('#peopleInput'),\n  peopleList: document.querySelector('#swapi-people'),\n  peopleInfoBlock: document.querySelector('.peopleDetailedInfo'),\n\n  speciesInput: document.querySelector('#speciesInput'),\n  speciesList: document.querySelector('#swapi-species'),\n  speciesInfoBlock: document.querySelector('.speciesDetailedInfo'),\n\n  starshipsInput: document.querySelector('#starshipsInput'),\n  starshipsList: document.querySelector('#swapi-starships'),\n  starshipsInfoBlock: document.querySelector('.starshipsDetailedInfo'),\n\n  vehiclesInput: document.querySelector('#vehiclesInput'),\n  vehiclesList: document.querySelector('#swapi-vehicles'),\n  vehiclesInfoBlock: document.querySelector('.vehiclesDetailedInfo'),\n};\n\nexport default refs;\n","function errorInfo() {\n  return `<li style=\"color: red;\">There are no such information about this! Try another</li>`;\n}\n\nexport default errorInfo;\n","import * as swapiApi from '../services/allInfoApi';\nimport * as renderInfo from './render';\nimport * as templateAllInfo from '../templates/templateAllinfo';\nimport * as templateDetailedInfo from '../templates/templateDetailedInfo';\nimport fetchDetailedInfo from '../services/detailedInfoApi';\nimport refs from './refs';\nimport debounce from 'lodash.debounce';\nimport errorNoteficationTemplate from '../templates/templateError';\n\n// ========================================== Planets ================================\n\nrefs.planetInput.addEventListener('input', debounce(searchPlanets, 500));\n\nfunction searchPlanets({ target }) {\n  swapiApi.planetObj.searchQuery = target.value;\n  refs.planetInfoBlock.innerHTML = '';\n  fetchPlanets();\n}\n\nfunction fetchPlanets() {\n  swapiApi.planetObj\n    .fetchPlanets()\n    .then(data => {\n      if (data.results.length === 0) {\n        return renderInfo.renderError(\n          refs.planetList,\n          errorNoteficationTemplate,\n        );\n      }\n\n      renderInfo.renderAllInfo(\n        refs.planetList,\n        data.results,\n        templateAllInfo.allPlanets,\n      );\n    })\n    .catch(err => {\n      console.log(err);\n    });\n}\n\nfetchPlanets();\n\nrefs.planetList.addEventListener('click', takePlanetInfo);\n\nfunction takePlanetInfo({ target }) {\n  if (target.nodeName !== 'BUTTON') {\n    return;\n  }\n\n  fetchDetailedInfo\n    .fetchDetailed(target.id, 'planets/')\n    .then(data => {\n      renderInfo.renderDetailedInfo(\n        refs.planetInfoBlock,\n        data,\n        templateDetailedInfo.planetInfo,\n      );\n    })\n    .catch(err => {\n      console.log(err);\n    });\n}\n\n// ========================================== Films ================================\n\nrefs.filmsInput.addEventListener('input', debounce(searchFilms, 500));\n\nfunction searchFilms({ target }) {\n  swapiApi.filmsObj.searchQuery = target.value;\n  refs.filmsInfoBlock.innerHTML = '';\n  fetchFilms();\n}\n\nfunction fetchFilms() {\n  swapiApi.filmsObj\n    .fetchFilms()\n    .then(data => {\n      if (data.results.length === 0) {\n        return renderInfo.renderError(\n          refs.filmsList,\n          errorNoteficationTemplate,\n        );\n      }\n\n      console.log(data.results);\n\n      renderInfo.renderAllInfo(\n        refs.filmsList,\n        data.results,\n        templateAllInfo.allFilms,\n      );\n    })\n    .catch(err => {\n      console.log(err);\n    });\n}\nfetchFilms();\n\nrefs.filmsList.addEventListener('click', takeFilmInfo);\n\nfunction takeFilmInfo({ target }) {\n  if (target.nodeName !== 'BUTTON') {\n    return;\n  }\n\n  fetchDetailedInfo\n    .fetchDetailed(target.id, 'films/')\n    .then(data => {\n      console.log(data);\n      renderInfo.renderDetailedInfo(\n        refs.filmsInfoBlock,\n        data,\n        templateDetailedInfo.filmsInfo,\n      );\n    })\n    .catch(err => {\n      console.log(err);\n    });\n}\n\n// ========================================== People ================================\n\nrefs.peopleInput.addEventListener('input', debounce(searchPeople, 500));\n\nfunction searchPeople({ target }) {\n  swapiApi.peopleObj.searchQuery = target.value;\n  refs.peopleInfoBlock.innerHTML = '';\n  fetchPeople();\n}\n\nfunction fetchPeople() {\n  swapiApi.peopleObj\n    .fetchPeople()\n    .then(data => {\n      if (data.results.length === 0) {\n        return renderInfo.renderError(\n          refs.peopleList,\n          errorNoteficationTemplate,\n        );\n      }\n\n      console.log(data.results);\n\n      renderInfo.renderAllInfo(\n        refs.peopleList,\n        data.results,\n        templateAllInfo.allNames,\n      );\n    })\n    .catch(err => {\n      console.log(err);\n    });\n}\nfetchPeople();\n\nrefs.peopleList.addEventListener('click', takePeopleInfo);\n\nfunction takePeopleInfo({ target }) {\n  if (target.nodeName !== 'BUTTON') {\n    return;\n  }\n\n  fetchDetailedInfo\n    .fetchDetailed(target.id, 'people/')\n    .then(data => {\n      console.log(data);\n      renderInfo.renderDetailedInfo(\n        refs.peopleInfoBlock,\n        data,\n        templateDetailedInfo.peopleInfo,\n      );\n    })\n    .catch(err => {\n      console.log(err);\n    });\n}\n\n// ========================================== Species ================================\n\nrefs.speciesInput.addEventListener('input', debounce(searchSpecies, 500));\n\nfunction searchSpecies({ target }) {\n  swapiApi.speciesObj.searchQuery = target.value;\n  refs.speciesInfoBlock.innerHTML = '';\n  fetchSpecies();\n}\n\nfunction fetchSpecies() {\n  swapiApi.speciesObj\n    .fetchSpecies()\n    .then(data => {\n      if (data.results.length === 0) {\n        return renderInfo.renderError(\n          refs.speciesList,\n          errorNoteficationTemplate,\n        );\n      }\n\n      console.log(data.results);\n\n      renderInfo.renderAllInfo(\n        refs.speciesList,\n        data.results,\n        templateAllInfo.allSpecies,\n      );\n    })\n    .catch(err => {\n      console.log(err);\n    });\n}\nfetchSpecies();\n\nrefs.speciesList.addEventListener('click', takeSpeciesInfo);\n\nfunction takeSpeciesInfo({ target }) {\n  if (target.nodeName !== 'BUTTON') {\n    return;\n  }\n\n  fetchDetailedInfo\n    .fetchDetailed(target.id, 'species/')\n    .then(data => {\n      console.log(data);\n      renderInfo.renderDetailedInfo(\n        refs.speciesInfoBlock,\n        data,\n        templateDetailedInfo.speciesInfo,\n      );\n    })\n    .catch(err => {\n      console.log(err);\n    });\n}\n\n// ========================================== Starships ================================\n\nrefs.starshipsInput.addEventListener('input', debounce(searchStarships, 500));\n\nfunction searchStarships({ target }) {\n  swapiApi.starshipsObj.searchQuery = target.value;\n  refs.starshipsInfoBlock.innerHTML = '';\n  fetchStarships();\n}\n\nfunction fetchStarships() {\n  swapiApi.starshipsObj\n    .fetchStarships()\n    .then(data => {\n      if (data.results.length === 0) {\n        return renderInfo.renderError(\n          refs.starshipsList,\n          errorNoteficationTemplate,\n        );\n      }\n\n      console.log(data.results);\n\n      renderInfo.renderAllInfo(\n        refs.starshipsList,\n        data.results,\n        templateAllInfo.allStarships,\n      );\n    })\n    .catch(err => {\n      console.log(err);\n    });\n}\nfetchStarships();\n\nrefs.starshipsList.addEventListener('click', takeStarshipsInfo);\n\nfunction takeStarshipsInfo({ target }) {\n  if (target.nodeName !== 'BUTTON') {\n    return;\n  }\n\n  fetchDetailedInfo\n    .fetchDetailed(target.id, 'starships/')\n    .then(data => {\n      console.log(data);\n      renderInfo.renderDetailedInfo(\n        refs.starshipsInfoBlock,\n        data,\n        templateDetailedInfo.starshipsInfo,\n      );\n    })\n    .catch(err => {\n      console.log(err);\n    });\n}\n\n// ========================================== Vehicles ================================\n\nrefs.vehiclesInput.addEventListener('input', debounce(searchVehicles, 500));\n\nfunction searchVehicles({ target }) {\n  swapiApi.vehiclesObj.searchQuery = target.value;\n  refs.vehiclesInfoBlock.innerHTML = '';\n  fetchVehicles();\n}\n\nfunction fetchVehicles() {\n  swapiApi.vehiclesObj\n    .fetchVehicles()\n    .then(data => {\n      if (data.results.length === 0) {\n        return renderInfo.renderError(\n          refs.vehiclesList,\n          errorNoteficationTemplate,\n        );\n      }\n\n      console.log(data.results);\n\n      renderInfo.renderAllInfo(\n        refs.vehiclesList,\n        data.results,\n        templateAllInfo.allVehicles,\n      );\n    })\n    .catch(err => {\n      console.log(err);\n    });\n}\nfetchVehicles();\n\nrefs.vehiclesList.addEventListener('click', takeVehiclesInfo);\n\nfunction takeVehiclesInfo({ target }) {\n  if (target.nodeName !== 'BUTTON') {\n    return;\n  }\n\n  fetchDetailedInfo\n    .fetchDetailed(target.id, 'vehicles/')\n    .then(data => {\n      console.log(data);\n      renderInfo.renderDetailedInfo(\n        refs.vehiclesInfoBlock,\n        data,\n        templateDetailedInfo.vehiclesInfo,\n      );\n    })\n    .catch(err => {\n      console.log(err);\n    });\n}\n"],"sourceRoot":""}